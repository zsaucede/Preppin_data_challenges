-- Split the Transaction Code to extract the letters at the start of the transaction code. These identify the bank who processes the transaction (help)

SELECT
SPLIT_PART(transaction_code,'-',1),
*
FROM PD2023_WK01;

-- Rename the new field with the Bank code 'Bank'. 

SELECT
SPLIT_PART(transaction_code,'-',1) AS Bank,
*
FROM PD2023_WK01;

-- Rename the values in the Online or In-person field, Online of the 1 values and In-Person for the 2 values.

SELECT
SPLIT_PART(transaction_code,'-',1) AS Bank,
CASE
    WHEN online_or_in_person=1 THEN 'Online'
    WHEN online_or_in_person=2 THEN 'In-Person'
END as online_or_in_person,
*
FROM PD2023_WK01;


-- Change the date to be the day of the week (help)

SELECT
SPLIT_PART(transaction_code,'-',1) AS Bank,
CASE
    WHEN online_or_in_person=1 THEN 'Online'
    WHEN online_or_in_person=2 THEN 'In-Person'
END as online_or_in_person,
DAYNAME(DATE(transaction_date,'dd/MM/yyyy hh24:mi:ss')) AS day_of_week,
*
FROM PD2023_WK01;

-- Different levels of detail are required in the outputs. You will need to sum up the values of the transactions in three ways (help):
-- 1. Total Values of Transactions by each bank

SELECT
SPLIT_PART(transaction_code,'-',1) AS Bank,
SUM(value) AS total_value
FROM PD2023_WK01
GROUP BY Bank;

-- 2. Total Values by Bank, Day of the Week and Type of Transaction (Online or In-Person)

SELECT
SPLIT_PART(transaction_code,'-',1) AS Bank,
CASE
    WHEN online_or_in_person=1 THEN 'Online'
    WHEN online_or_in_person=2 THEN 'In-Person'
END as online_or_in_person,
DAYNAME(DATE(transaction_date,'dd/MM/yyyy hh24:mi:ss')) AS day_of_week,
SUM(value) AS total_value
FROM PD2023_WK01
GROUP BY Bank, online_or_in_person, day_of_week;

-- 3. Total Values by Bank and Customer Code

SELECT
SPLIT_PART(transaction_code,'-',1) AS Bank,
SUM(value) AS total_value,
customer_code
FROM PD2023_WK01
GROUP BY Bank, customer_code;